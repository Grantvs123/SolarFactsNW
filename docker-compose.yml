
version: '3.8'

services:
  solarfactsnw:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: solarfactsnw-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-1880}:1880"
    environment:
      - NODE_ENV=production
      - APP_PORT=1880
      - APP_HOST=0.0.0.0
    env_file:
      - .env.local
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./patches:/app/patches
      - ./environments:/app/environments
    depends_on:
      - mysql
      - redis
    networks:
      - solarfactsnw-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1880/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mysql:
    image: mysql:8.0
    container_name: solarfactsnw-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-solarfacts2025}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-solarfacts_db}
      - MYSQL_USER=${MYSQL_USER:-solarfacts_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-solarfacts2025}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - solarfactsnw-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: solarfactsnw-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - solarfactsnw-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: solarfactsnw-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./shared/static:/var/www/static
    depends_on:
      - solarfactsnw
    networks:
      - solarfactsnw-network

  # Optional: Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: solarfactsnw-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - solarfactsnw-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: solarfactsnw-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - solarfactsnw-network
    profiles:
      - monitoring

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  solarfactsnw-network:
    driver: bridge
